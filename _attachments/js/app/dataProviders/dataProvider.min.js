DataProvider=Class.create({initialize:function(){this.aGraphsCallbacks=[];this.aLastGraphData={};this.aNumberCallbacks=[];this.aDataCallbacks=[];this.aLastNumberData=0;
},vRequestGraphRangeData:function(b,a){this.vCheckRange(b);},vCheckRange:function(a){if(!a.min){throw"Range min is required";}if(!a.max){throw"Range max is required";
}if(a.max<a.min){throw"Max should be greater than min in the range";}},vRequestRangeData:function(b,a){this.vCheckRange(b);},vOnNewNumberData:function(b,a){oOptions=$.extend({callbackMultiplier:1},a);
if(typeof b==="undefined"){a_aData=this.aLastNumberData;}if(typeof b!=="number"){throw"Expected a number as new value, but got "+typeof b;}$.each(this.aNumberCallbacks,function(c,d){setTimeout(function(){d(b);
},10*oOptions.callbackMultiplier);});},vOnNewGraphData:function(b,a){if(typeof b=="undefined"){b=this.aLastGraphData;}if(!b.y||!b.x){throw"Invalid data format given to new graph data. Format must be {x:value,y:value}";
}$.each(this.aGraphsCallbacks,function(c,d){setTimeout(function(){d(b);},10);});},vOnNewData:function(a,b){$.each(this.aDataCallbacks,function(c,d){setTimeout(function(){d(a);
},10);});},vRegisterNewNumbers:function(a){this.aNumberCallbacks.push(a);},vRegisterNewGraphs:function(a){this.aGraphsCallbacks.push(a);},vRegisterNewData:function(a){this.aDataCallbacks.push(a);
},oFilter:function(b){if(!b.graph&&!b.number){throw"Filter provided no number or graph element. At leas one of these is required!";}var a=new FilterDataProvider(b,this);
return a;}});